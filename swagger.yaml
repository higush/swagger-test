---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Shop&Go WebAPI Document"
host: "10.255.10.10:8080"
basePath: "/v1"
tags:
- name: "Application"
  description: "スマホアプリで使用するAPI\nAPI to use in application.\n"
- name: "Server"
  description: "店舗サーバで使うAPI\nAPI yo use in store server.\n"
- name: "REGI"
  description: "精算機で使うAPI\nAPI to use in payment station.\n"
- name: "CR5.0"
  description: "CR5.0（既設システム接続）仕様のAPI\nAPI to use in CR5,0.\n"
schemes:
- "https"
- "http"
paths:
  /guest/uses/initiate/:
    post:
      tags:
      - "Application"
      summary: "アプリ用APIキー・ユーザID発行　　　　　　　　　　　　　　　　　　　　　　　\nCreate API Key and User\
        \ ID for application.\n"
      description: "初回ログイン時に、APIキーとユーザIDを発行\nObtains the list of nearby stores using\
        \ location information.\n"
      operationId: "guestUsesInitiatePOST"
      produces:
      - "application/json"
      parameters:
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successInitiate"
        403:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /guest/user/token/:
    post:
      tags:
      - "Application"
      summary: "アプリ用JWTの発行\nCreate JWT for application.\n"
      description: "アクセス毎にForm認証を行い、json web tokenを発行する。以降、Headerに必ずセットする。\n(現状は匿名\
        会員のため、認証するユーザーIDとパスワードは固定の自動認証。将来的にログインにて発行)\n"
      operationId: "guestUserTokenPOST"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "ユーザID\nUser ID\n"
        required: true
        schema:
          $ref: "#/definitions/createToken"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successToken"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /guest/uses/versioncheck/:
    get:
      tags:
      - "Application"
      summary: "バージョンチェック\nVersion check.\n"
      description: "アプリ起動時に、使用可能バージョンであるかチェックする\nWhen the application is turned on,\
        \ it confirms whether the current application version is usable or not.\n"
      operationId: "guestUsesVersioncheckGET"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successVerChk"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /company/store/initiate/:
    post:
      tags:
      - "Server"
      summary: "店舗用APIキー・ユーザID発行　　　　　　　　　　　　　　　　　　\nCreate API Key and User ID for\
        \ store server.\n"
      description: "初回アクセス時に、APIキーとユーザIDを発行\nObtains the list of nearby stores using\
        \ location information.\n"
      operationId: "companyStoreInitiatePOST"
      parameters:
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess          \n"
          schema:
            $ref: "#/definitions/successInitiate"
        404:
          description: "異常終了\nerror          \n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /company/store/token/:
    post:
      tags:
      - "Server"
      summary: "店舗用JWTの発行\nCreate JWT for store.\n"
      description: "アクセス毎にForm認証を行い、json web tokenを発行する。以降、Headerに必ずセットする。\n(現状は匿名\
        会員のため、認証するユーザーIDとパスワードは固定の自動認証。将来的にログインにて発行)\n"
      operationId: "companyStoreTokenPOST"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successToken"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /guest/store-list{latitude}{longitude}{scale}:
    get:
      tags:
      - "Application"
      summary: "店舗一覧取得\nGet store-List\n"
      description: "位置情報から近傍の入店候補の店舗一覧を取得\nObtains the list of nearby stores using\
        \ location information.\n"
      operationId: "guestStore_listlatitudelongitudescaleGET"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "latitude"
        in: "path"
        required: true
        type: "string"
      - name: "longitude"
        in: "path"
        required: true
        type: "string"
      - name: "scale"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successStoreList"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /guest/companies/{companyCode}/stores/{storeCode}/:
    get:
      tags:
      - "Application"
      summary: "入店処理\nEntering a shop processing\n"
      description: "企業コード・店舗コードから店舗情報を取得\nObtains store information using the company\
        \ code and store code use it in Shop&Go application\n"
      operationId: "guestCompaniesCompanyCodeStoresStoreCodeGET"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "companyCode"
        in: "path"
        required: true
        type: "string"
      - name: "storeCode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successStoreGet"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /company/store/:
    get:
      tags:
      - "Server"
      summary: "店舗情報を取得\nGet store data.\n"
      description: "企業コード・店舗コードから店舗情報を取得\nStore information using the company code\
        \ and store code use it in third-party server\n"
      operationId: "companyStoreGET"
      parameters: []
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successStoreGet"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
    post:
      tags:
      - "Server"
      summary: "店舗情報を新規登録\nRegister the information of the store newly.\n"
      description: "企業コード・店舗コードから店舗情報を新規登録\nCreates or change store information using\
        \ the company code and store code.\n"
      operationId: "companyStorePOST"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "ユーザID\nUser ID\n"
        required: true
        schema:
          $ref: "#/definitions/storePOST"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/success"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /company/store/activate/:
    patch:
      tags:
      - "Server"
      summary: "店舗稼働フラグの更新\nUpdates store activeFlag\n"
      description: "店舗マスタの店舗稼働フラグを更新する\nUpdates store information using the company\
        \ code and store code.\n"
      operationId: "companyStoreActivatePATCH"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "activeFlag"
        in: "query"
        required: true
        type: "integer"
        format: "int8"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/success"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /company/:
    get:
      tags:
      - "Server"
      summary: "企業情報を取得\nGet company data.\n"
      description: "企業コードから企業情報を取得\nObtains store information using the company code.\n"
      operationId: "companyGET"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successCompanyGet"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
    post:
      tags:
      - "Server"
      summary: "企業情報を新規登録\nRegister the information of the company newly.\n"
      description: "企業コードから企業情報を新規登録\nCreates or change company information using\
        \ the company code.\n"
      operationId: "companyPOST"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: false
        schema:
          $ref: "#/definitions/companyPost"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/success"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /guest/company/{companyCode}/store/{storeCode}/instore-master/:
    get:
      tags:
      - "Application"
      summary: "インストアマスタの取得\nGet instore-master\n"
      description: "（ログイン(入店)処理が完了後）アプリがサーバからログイン店舗のインストアマスタを取得する。\nAfter Shop&Go\
        \ login processing is completion,acquire an in store master.\n"
      operationId: "guestCompanyCompanyCodeStoreStoreCodeInstore_masterGET"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "companyCode"
        in: "path"
        required: true
        type: "string"
      - name: "storeCode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/success"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /guest/company/{companyCode}/store/{storeCode}/items/{barcode}:
    get:
      tags:
      - "Application"
      summary: "商品マスタ情報を取得"
      description: "商品マスタ情報を取得する（バーコードスキャン時etc.）"
      operationId: "guestCompanyCompanyCodeStoreStoreCodeItemsBarcodeGET"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "companyCode"
        in: "path"
        required: true
        type: "string"
      - name: "storeCode"
        in: "path"
        required: true
        type: "string"
      - name: "barcode"
        in: "path"
        description: "バーコード文字列"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successItemGET"
        404:
          description: "以上終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /company/store/items/{barcode}:
    get:
      tags:
      - "Server"
      summary: "商品マスタの取得。"
      description: "既設メンテナンスシステムにて、商品コードをキーにして、商品マスタを取得する。"
      operationId: "companyStoreItemsBarcodeGET"
      produces:
      - "application/json"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "barcode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successItemGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
    delete:
      tags:
      - "Server"
      summary: "商品マスタ情報を削除"
      description: "商品コードをキーにして、商品マスタ情報を削除"
      operationId: "companyStoreItemsBarcodeDELETE"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "barcode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "Server"
  /company/store/items/:
    post:
      tags:
      - "Server"
      summary: "商品マスタの新規登録\nRegister the information of the item-master newly.\n"
      description: "既設メンテナンスシステムにて、商品コードをキーにし、商品マスタに新規登録する。\nCreates item master data\
        \ using the item code.\n"
      operationId: "companyStoreItemsPOST"
      produces:
      - "application/json"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/itemPOST"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/success"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /company/store/plural-items/:
    get:
      tags:
      - "Server"
      summary: "複数商品登録用URLの返却\n"
      description: "複数商品登録用に作成したファイルの、保存先URLを返す\n"
      operationId: "companyStorePlural_itemsGET"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successPluralGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /company/store/plural_items/status/{file_number}:
    get:
      tags:
      - "Server"
      summary: "複数アイテム登録用ファイルの進捗確認\n"
      description: "複数アイテム登録様に、サーバに上げたファイルの進捗状況を返す\n"
      operationId: "companyStorePlural_itemsStatusFile_numberGET"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-NAME"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORESERVER-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "file_number"
        in: "path"
        required: true
        type: "number"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successPluralStatusGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Server"
  /guest/company/{companyCode}/store/{storeCode}/carts/:
    post:
      tags:
      - "Application"
      summary: "カートIDを作成・取得\nCreate and Get cart ID.\n"
      description: "バーチャルショッピングカートを作成。カートID取得(スマホに返す)\nCreates ID of shopping cart\
        \ and returns it to the smartphone.\n"
      operationId: "guestCompanyCompanyCodeStoreStoreCodeCartsPOST"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "companyCode"
        in: "path"
        required: true
        type: "string"
      - name: "storeCode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/appCartPOST"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /REGI/carts/{cartID}/items/:
    get:
      tags:
      - "REGI"
      summary: "商品リストのデータを取得"
      description: "対応するバーチャルショッピングカート内の商品リストのデータを取得する。"
      operationId: "rEGICartsCartIDItemsGET"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "cartID"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/successCartIDGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "REGI"
  /guest/company/{companyCode}/store/{storeCode}/carts/{cartID}/register/:
    post:
      tags:
      - "Application"
      summary: "商品一覧をカートへ登録\nRegisters the list of scanned items to the cart.\n"
      description: "スマートフォンローカル内の商品一覧を、バーチャルショッピングカートに登録するAPI\nRegisters the list\
        \ of scanned items in the smartphone to the virtual shopping cart.\n"
      operationId: "guestCompanyCompanyCodeStoreStoreCodeCartsCartIDRegisterPOST"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "companyCode"
        in: "path"
        required: true
        type: "string"
      - name: "storeCode"
        in: "path"
        required: true
        type: "string"
      - name: "cartID"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/appItemPOST"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /guest/company/{companyCode}/store/{storeCode}/carts/{cartID}/shopping-status/:
    get:
      tags:
      - "Application"
      summary: "カート状態を取得\nObtains the status of the cart.\n"
      description: "対応するバーチャルショッピングカート内の状態を取得する。\nObtains the status of the virtual\
        \ shopping cart using the shopping cart ID.\n"
      operationId: "guestCompanyCompanyCodeStoreStoreCodeCartsCartIDShopping_statusGET"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "companyCode"
        in: "path"
        required: true
        type: "string"
      - name: "storeCode"
        in: "path"
        required: true
        type: "string"
      - name: "cartID"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/appCartStatusGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /REGI/company/store/carts/{cartID}/payment-status/:
    get:
      tags:
      - "REGI"
      summary: "カート状態を取得\nObtains the status of the cart.\n"
      description: "対応するバーチャルショッピングカート内の状態を取得する。\nObtains the status of the virtual\
        \ shopping cart using the shopping cart ID.\n"
      operationId: "rEGICompanyStoreCartsCartIDPayment_statusGET"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "cartID"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/REGICartStatusGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "REGI"
  /guest/company/{companyCode}/store/{storeCode}/carts/{cartID}/uploaded/:
    patch:
      tags:
      - "Application"
      summary: "カート状態を変更\nChanges the status of the cart.\n"
      description: "スマホアプリがショッピングカートの状態を変更する。\nChanges the status of the virtual shopping\
        \ cart using the shopping cart ID.\n"
      operationId: "guestCompanyCompanyCodeStoreStoreCodeCartsCartIDUploadedPATCH"
      parameters:
      - name: "X-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-APP-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "companyCode"
        in: "path"
        required: true
        type: "string"
      - name: "storeCode"
        in: "path"
        required: true
        type: "string"
      - name: "cartID"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/appCartStatusPATCH"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/success"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "Application"
  /REGI/company/store/carts/{cartID}/terminated/:
    patch:
      tags:
      - "REGI"
      summary: "カート状態を変更\nChanges the status of the cart.\n"
      description: "ショッピングカートの状態を変更する。\nChanges the status of the virtual shopping\
        \ cart using the shopping cart ID.\n"
      operationId: "rEGICompanyStoreCartsCartIDTerminatedPATCH"
      parameters:
      - name: "X-EX-API-KEY"
        in: "header"
        required: true
        type: "string"
      - name: "X-STORE-TOKEN"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "cartID"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/REGICartStatusPATCH"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/success"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "REGI"
  /ex/staff/{staffCode}:
    get:
      tags:
      - "CR5.0"
      summary: "従業員コードの確認"
      description: "精算機で読み取られた従業員コードが正しいか確認する"
      operationId: "exStaffStaffCodeGET"
      parameters:
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "staffCode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/CRStaffGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "CR50"
  /ex/departments/{departmentCode}:
    get:
      tags:
      - "CR5.0"
      summary: "部門名称を取得"
      description: "入力された部門コードをキーにして部門名称を取得する"
      operationId: "exDepartmentsDepartmentCodeGET"
      parameters:
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "departmentCode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/CRDepartmentGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "CR50"
  /ex/items/{barcode}:
    post:
      tags:
      - "CR5.0"
      summary: "商品情報を取得"
      description: "商品コードをキーにして商品情報を取得する"
      operationId: "exItemsBarcodePOST"
      parameters:
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "barcode"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/CRItemGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "CR50"
  /ex/subtotal/:
    get:
      tags:
      - "CR5.0"
      summary: "小計リクエストを行う"
      description: "商品リストを既設POSに送信し、精算済みデータ（ジャーナルデータ）を受け取る"
      operationId: "exSubtotalGET"
      parameters:
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CRSubtotal-paraPOST"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/CRSubtotal-resPOST"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "CR50"
  /ex/result/:
    post:
      tags:
      - "CR5.0"
      summary: "精算済みデータを送信"
      description: "精算済みデータ（ジャーナルデータ）を既設POSに送信する"
      operationId: "exResultPOST"
      parameters:
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/CRResultPOST"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "CR50"
  /ex/members/{memberInfo}:
    get:
      tags:
      - "CR5.0"
      summary: "他社ポイントサーバーから情報取得"
      description: "他社ポイントサーバーからポイント情報を取得する　※{memberInfo}は会員コード、電話番号等の情報"
      operationId: "exMembersMemberInfoGET"
      parameters:
      - name: "X-REGI-VERSION"
        in: "header"
        required: true
        type: "string"
      - name: "X-REGI-OS-TYPE"
        in: "header"
        required: true
        type: "string"
      - name: "memberInfo"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "正常終了\nsuccess\n"
          schema:
            $ref: "#/definitions/CRMemberGET"
        404:
          description: "異常終了\nerror\n"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "CR50"
definitions:
  success:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int8"
      message:
        type: "string"
    example:
      result: 0
      message: "message"
  error:
    type: "object"
    properties:
      result:
        type: "integer"
      message:
        type: "string"
        example: "failed"
      errorList:
        type: "array"
        items:
          $ref: "#/definitions/error_errorList"
  createToken:
    type: "object"
    properties:
      UID:
        type: "string"
      password:
        type: "string"
  successInitiate:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      API Key:
        type: "string"
      UID:
        type: "string"
    example:
      result: 0
      UID: "UID"
      API Key: "API Key"
      message: "message"
  successToken:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      JWT:
        type: "string"
    example:
      result: 0
      JWT: "JWT"
      message: "message"
  successVerChk:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      updateFlag:
        type: "integer"
        format: "int64"
      updateURL:
        type: "string"
    example:
      result: 0
      updateFlag: 6
      updateURL: "updateURL"
      message: "message"
  successStoreList:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      storeList:
        type: "array"
        items:
          $ref: "#/definitions/successStoreList_storeList"
    example:
      result: 0
      storeList:
      - address:
          address3: "address3"
          address2: "address2"
          address1: "address1"
        company:
          code: 6.02745618307040320615897144307382404804229736328125
          name: "name"
        location:
          latitude: "latitude"
          longitude: "longitude"
        store:
          code: 1.46581298050294517310021547018550336360931396484375
          name: "name"
        url:
          ur2: "ur2"
          ur3: "ur3"
          url: "url"
      - address:
          address3: "address3"
          address2: "address2"
          address1: "address1"
        company:
          code: 6.02745618307040320615897144307382404804229736328125
          name: "name"
        location:
          latitude: "latitude"
          longitude: "longitude"
        store:
          code: 1.46581298050294517310021547018550336360931396484375
          name: "name"
        url:
          ur2: "ur2"
          ur3: "ur3"
          url: "url"
      message: "message"
  company:
    type: "object"
    properties:
      code:
        type: "number"
      name:
        type: "string"
    example:
      code: 6.02745618307040320615897144307382404804229736328125
      name: "name"
  store:
    type: "object"
    properties:
      code:
        type: "number"
      name:
        type: "string"
    example:
      code: 1.46581298050294517310021547018550336360931396484375
      name: "name"
  location:
    type: "object"
    properties:
      latitude:
        type: "string"
      longitude:
        type: "string"
    example:
      latitude: "latitude"
      longitude: "longitude"
  address:
    type: "object"
    properties:
      address1:
        type: "string"
      address2:
        type: "string"
      address3:
        type: "string"
    example:
      address3: "address3"
      address2: "address2"
      address1: "address1"
  url:
    type: "object"
    properties:
      url:
        type: "string"
      ur2:
        type: "string"
      ur3:
        type: "string"
    example:
      ur2: "ur2"
      ur3: "ur3"
      url: "url"
  successStoreGet:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      companyName:
        type: "string"
      storeName:
        type: "string"
      location:
        $ref: "#/definitions/location"
      address:
        $ref: "#/definitions/address"
      telephone:
        type: "string"
      openTime:
        type: "string"
      closeTime:
        type: "string"
      availableTimeFrom:
        type: "string"
      availableTimeTo:
        type: "string"
      maxScanItems:
        type: "integer"
        format: "int64"
      enterpriseFlag:
        type: "integer"
        format: "int64"
      timeZone:
        type: "string"
      ulrList:
        $ref: "#/definitions/url"
      pointFlag:
        type: "integer"
        format: "int64"
      pointServerDomain:
        type: "string"
      authenticationKey:
        type: "string"
      currency:
        type: "string"
      currencyPosision:
        type: "integer"
        format: "int64"
      currencyRoundPosision:
        type: "integer"
        format: "int64"
      zeroPaddingFlag:
        type: "integer"
        format: "int8"
      activeFlag:
        type: "integer"
        format: "int8"
    example:
      address:
        address3: "address3"
        address2: "address2"
        address1: "address1"
      enterpriseFlag: 1
      pointFlag: 5
      companyName: "companyName"
      currencyPosision: 5
      currencyRoundPosision: 2
      zeroPaddingFlag: 7
      timeZone: "timeZone"
      telephone: "telephone"
      authenticationKey: "authenticationKey"
      message: "message"
      result: 0
      availableTimeFrom: "availableTimeFrom"
      pointServerDomain: "pointServerDomain"
      maxScanItems: 6
      ulrList:
        ur2: "ur2"
        ur3: "ur3"
        url: "url"
      closeTime: "closeTime"
      availableTimeTo: "availableTimeTo"
      storeName: "storeName"
      location:
        latitude: "latitude"
        longitude: "longitude"
      currency: "currency"
      openTime: "openTime"
      activeFlag: 9
  storePOST:
    type: "object"
    properties:
      companyCode:
        type: "string"
      storeCode:
        type: "string"
      location:
        $ref: "#/definitions/location"
      address:
        $ref: "#/definitions/address"
      telephone:
        type: "string"
      openTime:
        type: "string"
      closeTime:
        type: "string"
      availableTimeFrom:
        type: "string"
      availableTimeTo:
        type: "string"
      maxScanItems:
        type: "integer"
        format: "int64"
      enterpriseFlag:
        type: "integer"
        format: "int64"
      timeZone:
        type: "string"
      ulrList:
        $ref: "#/definitions/url"
      pointFlag:
        type: "integer"
        format: "int64"
      pointServerDomain:
        type: "string"
      authenticationKey:
        type: "string"
      currency:
        type: "string"
      currencyPosition:
        type: "integer"
        format: "int64"
      currencyRoundPosision:
        type: "integer"
        format: "int64"
      zeroPaddingFlag:
        type: "integer"
        format: "int8"
      activeFlag:
        type: "integer"
        format: "int8"
  successCompanyGet:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      companyName:
        type: "string"
      location:
        $ref: "#/definitions/location"
      address:
        $ref: "#/definitions/address"
      telephone:
        type: "string"
      ulrList:
        $ref: "#/definitions/url"
    example:
      result: 0
      address:
        address3: "address3"
        address2: "address2"
        address1: "address1"
      ulrList:
        ur2: "ur2"
        ur3: "ur3"
        url: "url"
      companyName: "companyName"
      location:
        latitude: "latitude"
        longitude: "longitude"
      telephone: "telephone"
      message: "message"
  companyPost:
    type: "object"
    properties:
      companyCode:
        type: "string"
      companyName:
        type: "string"
      location:
        $ref: "#/definitions/location"
      address:
        $ref: "#/definitions/address"
      telephone:
        type: "string"
      ulrList:
        $ref: "#/definitions/url"
  successItemGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      itemType:
        type: "integer"
      warningTyepe:
        type: "integer"
      reduceTaxFlag:
        type: "integer"
      barcode:
        type: "string"
      name:
        type: "string"
      price:
        type: "string"
      discountList:
        $ref: "#/definitions/discountList"
      unitOfMeasurement:
        type: "string"
      taxList:
        $ref: "#/definitions/taxList"
    example:
      result: 0
      reduceTaxFlag: 5
      unitOfMeasurement: "unitOfMeasurement"
      discountList:
        code: "code"
        establishmentQuantity: 5
        name: "name"
        discountPrice: "discountPrice"
      taxList:
        rate: 7
        type: 2
      itemType: 6
      warningTyepe: 1
      price: "price"
      name: "name"
      message: "message"
      barcode: "barcode"
  discountList:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
      discountPrice:
        type: "string"
      establishmentQuantity:
        type: "integer"
        format: "int8"
    example:
      code: "code"
      establishmentQuantity: 5
      name: "name"
      discountPrice: "discountPrice"
  taxList:
    type: "object"
    properties:
      type:
        type: "integer"
        format: "int8"
      rate:
        type: "integer"
        format: "int8"
    example:
      rate: 7
      type: 2
  itemPOST:
    type: "object"
    properties:
      itemType:
        type: "integer"
      warningTyepe:
        type: "integer"
      reduceTaxFlag:
        type: "integer"
      barcode:
        type: "string"
      name:
        type: "string"
      price:
        type: "string"
      discountList:
        $ref: "#/definitions/discountList"
      unitOfMeasurement:
        type: "string"
      taxList:
        $ref: "#/definitions/taxList"
  successPluralGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      itemsURL:
        type: "string"
    example:
      result: 0
      itemsURL: "itemsURL"
      message: "message"
  successPluralStatusGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      progress:
        type: "integer"
        format: "int8"
    example:
      result: 0
      progress: 6
      message: "message"
  successCartIDGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      startTime:
        type: "string"
      itemList:
        type: "array"
        items:
          $ref: "#/definitions/successCartIDGET_itemList"
    example:
      result: 0
      startTime: "startTime"
      itemList:
      - quantity: 1
        price: 5
        scanStatus: 6
        ID: "ID"
        barcode: "barcode"
        barcode2: "barcode2"
      - quantity: 1
        price: 5
        scanStatus: 6
        ID: "ID"
        barcode: "barcode"
        barcode2: "barcode2"
      message: "message"
  appCartPOST:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      cartID:
        type: "string"
      startTime:
        type: "string"
    example:
      result: 0
      cartID: "cartID"
      startTime: "startTime"
      message: "message"
  appItemPOST:
    type: "object"
    properties:
      ID:
        type: "string"
      scanStatus:
        type: "integer"
        format: "int8"
      barcode:
        type: "string"
      barcode2:
        type: "string"
      quantity:
        type: "integer"
        format: "int8"
      price:
        type: "integer"
        format: "int8"
    example:
      quantity: 6
      price: 1
      scanStatus: 0
      ID: "ID"
      barcode: "barcode"
      barcode2: "barcode2"
  appCartStatusGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      cartStatus:
        type: "integer"
        format: "int8"
    example:
      result: 0
      cartStatus: 6
      message: "message"
  appCartStatusPATCH:
    type: "object"
    properties:
      cartStatus:
        type: "integer"
        format: "int8"
  REGICartStatusGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      cartStatus:
        type: "integer"
        format: "int8"
    example:
      result: 0
      cartStatus: 6
      message: "message"
  REGICartStatusPATCH:
    type: "object"
    properties:
      cartStatus:
        type: "integer"
        format: "int8"
    example:
      cartStatus: 0
  CRStaffGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      staffCode:
        type: "string"
      staffName:
        type: "string"
    example:
      result: 0
      staffCode: "staffCode"
      staffName: "staffName"
      message: "message"
  CRDepartmentGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      departmentCode:
        type: "string"
      departmentName:
        type: "string"
    example:
      result: 0
      departmentName: "departmentName"
      departmentCode: "departmentCode"
      message: "message"
  CRItemGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      barcode:
        type: "string"
      barcode2:
        type: "string"
      name:
        type: "string"
      price:
        type: "integer"
        format: "int8"
      weighrType:
        type: "integer"
        format: "int8"
      quantity:
        type: "integer"
        format: "int8"
      unitOfMeasurement:
        type: "integer"
        format: "int8"
    example:
      result: 0
      unitOfMeasurement: 5
      quantity: 5
      price: 6
      weighrType: 1
      name: "name"
      message: "message"
      barcode: "barcode"
      barcode2: "barcode2"
  CRSubtotal-paraPOST:
    type: "object"
    properties:
      paymentCode:
        type: "string"
      startTime:
        type: "string"
      companyCode:
        type: "string"
      companyName:
        type: "string"
      storeCode:
        type: "string"
      storeName:
        type: "string"
      memberList:
        $ref: "#/definitions/memberCode"
      subtotalRequestTime:
        type: "string"
      receiptNum:
        type: "string"
      cartID:
        type: "string"
      paymentTypeList:
        $ref: "#/definitions/paymentTypeList-subtotal"
      itemList:
        $ref: "#/definitions/itemList"
    example:
      companyCode: "companyCode"
      memberList:
        code: "code"
      paymentCode: "paymentCode"
      receiptNum: "receiptNum"
      paymentTypeList:
        type: "type"
      companyName: "companyName"
      cartID: "cartID"
      startTime: "startTime"
      storeName: "storeName"
      itemList:
        price: 1
        scanStatus: 0
        quantitiy: 6
        ID: "ID"
        barcode: "barcode"
        barcode2: "barcode2"
      subtotalRequestTime: "subtotalRequestTime"
      storeCode: "storeCode"
  CRSubtotal-resPOST:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
      paymentCode:
        type: "string"
      startTime:
        type: "string"
      memberList:
        $ref: "#/definitions/memberList"
      subtotalRequestTime:
        type: "string"
      receiptNum:
        type: "string"
      cartID:
        type: "string"
      total:
        type: "integer"
        format: "int8"
      subtotal:
        type: "integer"
        format: "int8"
      totalQuantity:
        type: "integer"
        format: "int8"
      totalDiscount:
        type: "integer"
        format: "int8"
      itemTotalDiscount:
        type: "integer"
        format: "int8"
      subTotalDiscount:
        type: "integer"
        format: "int8"
      subTotalDiscountList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_subTotalDiscountList"
      totalService:
        type: "integer"
        format: "int8"
      itemTotalService:
        type: "integer"
        format: "int8"
      subTotalService:
        type: "integer"
        format: "int8"
      subTotalServiceList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_subTotalServiceList"
      taxAmount:
        type: "integer"
        format: "int8"
      taxList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_taxList"
      itemList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_itemList"
      totalRoundAmount:
        type: "integer"
        format: "int8"
    example:
      totalRoundAmount: 6
      receiptNum: "receiptNum"
      cartID: "cartID"
      subTotalServiceList:
      - servicePrice: 1
        name: "name"
      - servicePrice: 1
        name: "name"
      totalService: 7
      itemTotalService: 1
      subTotalService: 1
      message: "message"
      itemTotalDiscount: 3
      subTotalDiscountList:
      - name: "name"
        discountPrice: 4
      - name: "name"
        discountPrice: 4
      result: 0
      taxList:
      - amount: 4
        code: "code"
        rate: 7
        name: "name"
        taxableAmout: 1
      - amount: 4
        code: "code"
        rate: 7
        name: "name"
        taxableAmout: 1
      total: 5
      memberList:
        code: "code"
        availableAmount: 5
        name: "name"
        memberType: "memberType"
        point: 6
        addPoint: 1
      totalQuantity: 7
      paymentCode: "paymentCode"
      subTotalDiscount: 2
      subtotal: 2
      totalDiscount: 9
      startTime: "startTime"
      itemList:
      - calculatedPrice: 8
        unitOfMeasurement: "unitOfMeasurement"
        discountList: ""
        quantity: 9
        scanStatus: 5
        barcode2: "barcode2"
        memberFlag: 9
        weightType: 9
        taxList: ""
        price: 6
        name: "name"
        serviceList: ""
        ID: "ID"
        barcode: "barcode"
      - calculatedPrice: 8
        unitOfMeasurement: "unitOfMeasurement"
        discountList: ""
        quantity: 9
        scanStatus: 5
        barcode2: "barcode2"
        memberFlag: 9
        weightType: 9
        taxList: ""
        price: 6
        name: "name"
        serviceList: ""
        ID: "ID"
        barcode: "barcode"
      taxAmount: 6
      subtotalRequestTime: "subtotalRequestTime"
  itemList:
    type: "object"
    properties:
      ID:
        type: "string"
      scanStatus:
        type: "integer"
      barcode:
        type: "string"
      barcode2:
        type: "string"
      quantitiy:
        type: "integer"
        format: "int8"
      price:
        type: "integer"
        format: "int8"
    example:
      price: 1
      scanStatus: 0
      quantitiy: 6
      ID: "ID"
      barcode: "barcode"
      barcode2: "barcode2"
  taxList_subtotal:
    type: "array"
    items:
      $ref: "#/definitions/taxList_subtotal_inner"
  discountList_subtotal:
    type: "array"
    items:
      $ref: "#/definitions/discountList_subtotal_inner"
  serviceList_subtotal:
    type: "array"
    items:
      $ref: "#/definitions/serviceList_subtotal_inner"
  CRResultPOST:
    type: "object"
    properties:
      paymentCode:
        type: "string"
      startTime:
        type: "string"
      memberList:
        $ref: "#/definitions/memberList"
      subtotalRequestTime:
        type: "string"
      receiptNum:
        type: "string"
      cartID:
        type: "string"
      total:
        type: "integer"
        format: "int8"
      subtotal:
        type: "integer"
        format: "int8"
      totalQuantity:
        type: "integer"
        format: "int8"
      totalDiscount:
        type: "integer"
        format: "int8"
      itemTotalDiscount:
        type: "integer"
        format: "int8"
      subTotalDiscount:
        type: "integer"
        format: "int8"
      subTotalDiscountList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_subTotalDiscountList"
      totalService:
        type: "integer"
        format: "int8"
      itemTotalService:
        type: "integer"
        format: "int8"
      subTotalService:
        type: "integer"
        format: "int8"
      subTotalServiceList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_subTotalServiceList"
      taxAmount:
        type: "integer"
        format: "int8"
      taxList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_taxList"
      itemList:
        type: "array"
        items:
          $ref: "#/definitions/CRSubtotalresPOST_itemList"
      totalRoundAmount:
        type: "integer"
        format: "int8"
      paymentTypeList:
        type: "array"
        items:
          $ref: "#/definitions/paymentTypeList-Res-subtotal"
      cancelFlag:
        type: "integer"
        format: "int8"
    example:
      totalRoundAmount: 4
      receiptNum: "receiptNum"
      cartID: "cartID"
      subTotalServiceList:
      - servicePrice: 1
        name: "name"
      - servicePrice: 1
        name: "name"
      totalService: 7
      itemTotalService: 9
      subTotalService: 3
      itemTotalDiscount: 5
      cancelFlag: 1
      subTotalDiscountList:
      - name: "name"
        discountPrice: 4
      - name: "name"
        discountPrice: 4
      taxList:
      - amount: 4
        code: "code"
        rate: 7
        name: "name"
        taxableAmout: 1
      - amount: 4
        code: "code"
        rate: 7
        name: "name"
        taxableAmout: 1
      total: 0
      memberList:
        code: "code"
        availableAmount: 5
        name: "name"
        memberType: "memberType"
        point: 6
        addPoint: 1
      totalQuantity: 1
      paymentCode: "paymentCode"
      subTotalDiscount: 2
      paymentTypeList:
      - paymentCode: "paymentCode"
        price: 7
        type: "type"
      - paymentCode: "paymentCode"
        price: 7
        type: "type"
      subtotal: 6
      totalDiscount: 5
      startTime: "startTime"
      itemList:
      - calculatedPrice: 8
        unitOfMeasurement: "unitOfMeasurement"
        discountList: ""
        quantity: 9
        scanStatus: 5
        barcode2: "barcode2"
        memberFlag: 9
        weightType: 9
        taxList: ""
        price: 6
        name: "name"
        serviceList: ""
        ID: "ID"
        barcode: "barcode"
      - calculatedPrice: 8
        unitOfMeasurement: "unitOfMeasurement"
        discountList: ""
        quantity: 9
        scanStatus: 5
        barcode2: "barcode2"
        memberFlag: 9
        weightType: 9
        taxList: ""
        price: 6
        name: "name"
        serviceList: ""
        ID: "ID"
        barcode: "barcode"
      taxAmount: 2
      subtotalRequestTime: "subtotalRequestTime"
  CRMemberGET:
    type: "object"
    properties:
      result:
        type: "integer"
        format: "int64"
      message:
        type: "string"
    example:
      result: 0
      message: "message"
  memberCode:
    type: "object"
    properties:
      code:
        type: "string"
    example:
      code: "code"
  memberList:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
      point:
        type: "integer"
        format: "int8"
      addPoint:
        type: "integer"
        format: "int8"
      availableAmount:
        type: "integer"
        format: "int8"
      memberType:
        type: "string"
    example:
      code: "code"
      availableAmount: 5
      name: "name"
      memberType: "memberType"
      point: 6
      addPoint: 1
  paymentTypeList-subtotal:
    type: "object"
    properties:
      type:
        type: "string"
    example:
      type: "type"
  paymentTypeList-Res-subtotal:
    type: "object"
    properties:
      type:
        type: "string"
      paymentCode:
        type: "string"
      price:
        type: "integer"
        format: "int8"
    example:
      paymentCode: "paymentCode"
      price: 7
      type: "type"
  error_errorList:
    properties:
      code:
        type: "string"
        example: "12345"
      message:
        type: "string"
        example: "network error"
  successStoreList_storeList:
    properties:
      company:
        $ref: "#/definitions/company"
      store:
        $ref: "#/definitions/store"
      location:
        $ref: "#/definitions/location"
      address:
        $ref: "#/definitions/address"
      url:
        $ref: "#/definitions/url"
    example:
      address:
        address3: "address3"
        address2: "address2"
        address1: "address1"
      company:
        code: 6.02745618307040320615897144307382404804229736328125
        name: "name"
      location:
        latitude: "latitude"
        longitude: "longitude"
      store:
        code: 1.46581298050294517310021547018550336360931396484375
        name: "name"
      url:
        ur2: "ur2"
        ur3: "ur3"
        url: "url"
  successCartIDGET_itemList:
    properties:
      ID:
        type: "string"
      scanStatus:
        type: "integer"
        format: "int8"
      barcode:
        type: "string"
      barcode2:
        type: "string"
      quantity:
        type: "integer"
        format: "int8"
      price:
        type: "integer"
        format: "int8"
    example:
      quantity: 1
      price: 5
      scanStatus: 6
      ID: "ID"
      barcode: "barcode"
      barcode2: "barcode2"
  CRSubtotalresPOST_subTotalDiscountList:
    properties:
      name:
        type: "string"
      discountPrice:
        type: "integer"
        format: "int8"
    example:
      name: "name"
      discountPrice: 4
  CRSubtotalresPOST_subTotalServiceList:
    properties:
      name:
        type: "string"
      servicePrice:
        type: "integer"
        format: "int8"
    example:
      servicePrice: 1
      name: "name"
  CRSubtotalresPOST_taxList:
    properties:
      code:
        type: "string"
      name:
        type: "string"
      rate:
        type: "integer"
        format: "int8"
      taxableAmout:
        type: "integer"
        format: "int8"
      amount:
        type: "integer"
        format: "int8"
    example:
      amount: 4
      code: "code"
      rate: 7
      name: "name"
      taxableAmout: 1
  CRSubtotalresPOST_itemList:
    properties:
      ID:
        type: "string"
      scanStatus:
        type: "integer"
        format: "int8"
      barcode:
        type: "string"
      barcode2:
        type: "string"
      name:
        type: "string"
      quantity:
        type: "integer"
        format: "int8"
      memberFlag:
        type: "integer"
        format: "int8"
      price:
        type: "integer"
        format: "int8"
      calculatedPrice:
        type: "integer"
        format: "int8"
      weightType:
        type: "integer"
        format: "int8"
      unitOfMeasurement:
        type: "string"
      taxList:
        $ref: "#/definitions/taxList_subtotal"
      discountList:
        $ref: "#/definitions/discountList_subtotal"
      serviceList:
        $ref: "#/definitions/serviceList_subtotal"
    example:
      calculatedPrice: 8
      unitOfMeasurement: "unitOfMeasurement"
      discountList: ""
      quantity: 9
      scanStatus: 5
      barcode2: "barcode2"
      memberFlag: 9
      weightType: 9
      taxList: ""
      price: 6
      name: "name"
      serviceList: ""
      ID: "ID"
      barcode: "barcode"
  taxList_subtotal_inner:
    properties:
      type:
        type: "string"
      code:
        type: "string"
      name:
        type: "string"
      rate:
        type: "integer"
        format: "int8"
      taxableAmout:
        type: "integer"
        format: "int8"
      amount:
        type: "integer"
        format: "int8"
  discountList_subtotal_inner:
    properties:
      code:
        type: "string"
      name:
        type: "string"
      discountPrice:
        type: "string"
      establishmentQuantity:
        type: "integer"
        format: "int8"
  serviceList_subtotal_inner:
    properties:
      code:
        type: "string"
      name:
        type: "string"
      servicePrice:
        type: "string"
